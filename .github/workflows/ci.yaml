name: CI

on:
  push:
    # Run on the main branch
    branches:
      - main
  # Also on PRs, just be careful not to publish anything
  pull_request:
  # And merge queues
  merge_group:
    types: [checks_requested]
  # Allow to be called from other workflows (like "release")
  workflow_call:
  # But don't trigger on tags, as they are covered by the "release.yaml" workflow

jobs:
  ci:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Check formatting
        run: |
          cargo fmt --check

      - name: Check
        run: cargo check

    container:
      needs: [ ci ]

      uses: ./.github/workflows/containers.yaml
      secrets: inherit

      with:
        imageTag: "latest"
        platforms: "linux/amd64"

    publish:
      permissions:
        contents: read
        packages: write

      needs: [ ci, container ]
      runs-on: ubuntu-22.04
      steps:
          - uses: actions/download-artifact@v3
            with:
              path: ~/download
          - name: Display downloaded content
            run: ls -R ~/download
          - name: Load container
            run: |
                podman load --input ~/download/container/image.tar

          - name: Log in to ghcr.io
            uses: redhat-actions/podman-login@v1
            with:
              username: ${{ github.repository_owner }}
              password: ${{ secrets.GITHUB_TOKEN }}
              registry: "ghcr.io"

          - name: Push to ghcr.io
            id: push-images
            env:
              IMAGE: "ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest"
            run: |
              podman push \
                "${{ env.IMAGE_NAME }}:latest" \
                "${IMAGE}" \
                --digestfile "${RUNNER_TEMP}/push.digest"
              echo "imageDigest=$(cat ${RUNNER_TEMP}/push.digest)" >> $GITHUB_OUTPUT
              rm ${RUNNER_TEMP}/push.digest
